type anon_class_18_1 = 
 service {
   add_restricted: (principal) -> () oneway;
   create_canister: () -> (opt principal);
   delete_canister: (principal) -> ();
   install_code: (principal, opt Wasm_module) -> ();
   make_proposal: (OperationType, principal, opt Wasm_module) -> ();
   remove_restricted: (principal) -> () oneway;
   start_canister: (principal) -> ();
   stop_canister: (principal) -> ();
   vote_proposal: (nat, bool) -> ();
 };
type Wasm_module = vec nat8;
type OperationType = 
 variant {
   addRestricted;
   create;
   delete;
   install;
   removeRestricted;
   start;
   stop;
 };
service : (nat, nat, vec principal) -> anon_class_18_1
